name: CI workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '.dockerignore'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: 'ubuntu-latest'

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: ['18.8.0'] 

    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1 
      DATABASE_POSTGRES_URL: "postgres://prisma:prisma@localhost:5432/tests"

    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Run docker/docker-compose.yml
        run: docker-compose -f docker/docker-compose.yml up -d

      - uses: pnpm/action-setup@v2.2.2
        with:
          run_install: false
          version: 7

      - name: User Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i

      - name: Expect success when QUERY_BATCH_SIZE is not set, or it's <= 32766
        run: |
          pnpm prisma:db-push
          pnpm test -- -t 'QUERY_BATCH_SIZE not set externally'
          QUERY_BATCH_SIZE=32766 pnpm test -- -t 'QUERY_BATCH_SIZE set externally'
          QUERY_BATCH_SIZE=1000 pnpm test -- -t 'QUERY_BATCH_SIZE set externally'
        working-directory: './packages/issue-8832'
        env:
          DATABASE_URL: ${{ env.DATABASE_POSTGRES_URL }}

      - name: Expect failure when QUERY_BATCH_SIZE is > 32766
        id: expect-failure-large-query-batch-size
        continue-on-error: true
        run: |
          QUERY_BATCH_SIZE=32767 pnpm test -- -t 'QUERY_BATCH_SIZE set externally'
        working-directory: './packages/issue-8832'
        env:
          DATABASE_URL: ${{ env.DATABASE_POSTGRES_URL }}

      - name: Assert failure in previous step
        if: steps.expect-failure-large-query-batch-size.outcome == 'success' && steps.expect-failure-large-query-batch-size.conclusion == 'success'
        run: |
          echo "Expect test to fail with QUERY_BATCH_SIZE=32767, but it didn't"
          exit 1
